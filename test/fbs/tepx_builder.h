#ifndef TEPX_BUILDER_H
#define TEPX_BUILDER_H

/* Generated by flatcc 0.5.3-pre FlatBuffers schema compiler for C by dvide.com */

#ifndef TEPX_READER_H
#include "tepx_reader.h"
#endif
#ifndef FLATBUFFERS_COMMON_BUILDER_H
#include "flatbuffers_common_builder.h"
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension ".bin"
#endif

static const flatbuffers_voffset_t __tepx_test_message_required[] = { 0 };
typedef flatbuffers_ref_t tepx_test_message_ref_t;
static tepx_test_message_ref_t tepx_test_message_clone(flatbuffers_builder_t *B, tepx_test_message_table_t t);
__flatbuffers_build_table(flatbuffers_, tepx_test_message, 2)

#define __tepx_test_message_formal_args , flatbuffers_string_ref_t v0, uint16_t v1
#define __tepx_test_message_call_args , v0, v1
static inline tepx_test_message_ref_t tepx_test_message_create(flatbuffers_builder_t *B __tepx_test_message_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, tepx_test_message, tepx_test_message_identifier, tepx_test_message_type_identifier)

__flatbuffers_build_string_field(0, flatbuffers_, tepx_test_message_id, tepx_test_message)
__flatbuffers_build_scalar_field(1, flatbuffers_, tepx_test_message_replica_id, flatbuffers_uint16, uint16_t, 2, 2, UINT16_C(0), tepx_test_message)

static inline tepx_test_message_ref_t tepx_test_message_create(flatbuffers_builder_t *B __tepx_test_message_formal_args)
{
    if (tepx_test_message_start(B)
        || tepx_test_message_id_add(B, v0)
        || tepx_test_message_replica_id_add(B, v1)) {
        return 0;
    }
    return tepx_test_message_end(B);
}

static tepx_test_message_ref_t tepx_test_message_clone(flatbuffers_builder_t *B, tepx_test_message_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (tepx_test_message_start(B)
        || tepx_test_message_id_pick(B, t)
        || tepx_test_message_replica_id_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, tepx_test_message_end(B));
}

#include "flatcc/flatcc_epilogue.h"
#endif /* TEPX_BUILDER_H */
